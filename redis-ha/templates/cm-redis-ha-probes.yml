apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "redis-ha.fullname" . }}-probes
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "redis-ha.labels" . | nindent 4 }}
data:
  {{- with .Files.Glob "configmaps/redis-ha-probes/*" -}}
  {{ ( . ).AsConfig | nindent 2 }}
  {{- end -}}

  check-quorum.sh: |
    #!/bin/sh
    set -eu
    MASTER_GROUP={{ .Values.sentinel.masterGroup | quote }}
    SENTINEL_PORT={{ .Values.service.sentinel.port }}
    REDIS_PORT={{ .Values.service.redis.port }}
    NUM_SLAVES=$(redis-cli -p "$SENTINEL_PORT" sentinel master {{ .Values.sentinel.masterGroup }} | awk '/num-slaves/{getline; print}')
    MIN_SLAVES=1

    if [ "$1" = "$SENTINEL_PORT" ]; then
        if redis-cli -p "$SENTINEL_PORT" sentinel ckquorum "$MASTER_GROUP" | grep -q NOQUORUM ; then
            echo "ERROR: NOQUORUM. Sentinel quorum check failed, not enough sentinels found"
            exit 1
        fi
    elif [ "$1" = "$REDIS_PORT" ]; then
        if [ "$MIN_SLAVES" -gt "$NUM_SLAVES" ]; then
            echo "Could not find enough replicating slaves. Needed $MIN_SLAVES but found $NUM_SLAVES"
            exit 1
        fi
    fi
    sh /probes/readiness.sh "$1"
